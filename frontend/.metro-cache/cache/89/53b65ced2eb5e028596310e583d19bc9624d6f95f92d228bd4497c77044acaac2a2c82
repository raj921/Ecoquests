{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":46,"index":93}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":94},"end":{"line":5,"column":41,"index":135}}],"key":"099N+Zv4K9pUFNBPk2MtNNMStD8=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":808},"end":{"line":30,"column":48,"index":856}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _reactIs = require(_dependencyMap[1], \"react-is\");\n  var _useRoute = require(_dependencyMap[2], \"./useRoute.js\");\n  var _jsxRuntime = require(_dependencyMap[3], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n\n  /**\n   * Infer the param list from the static navigation config.\n   */\n\n  const MemoizedScreen = /*#__PURE__*/React.memo(({\n    component\n  }) => {\n    const route = (0, _useRoute.useRoute)();\n    const children = /*#__PURE__*/React.createElement(component, {\n      route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  const getItemsFromScreens = (Screen, screens) => {\n    return Object.entries(screens).map(([name, item]) => {\n      let component;\n      let props = {};\n      let useIf;\n      let isNavigator = false;\n      if ('screen' in item) {\n        const {\n          screen,\n          if: _if,\n          ...rest\n        } = item;\n        useIf = _if;\n        props = rest;\n        if ((0, _reactIs.isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _reactIs.isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      const element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _jsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return () => {\n        const shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Screen, {\n          name: name,\n          ...props,\n          children: () => element\n        }, name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    const {\n      Navigator,\n      Group,\n      Screen,\n      config\n    } = tree;\n    const {\n      screens,\n      groups,\n      ...rest\n    } = config;\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    const items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (const key in config) {\n      if (key === 'screens' && screens) {\n        items.push(...getItemsFromScreens(Screen, screens));\n      }\n      if (key === 'groups' && groups) {\n        items.push(...Object.entries(groups).map(([key, {\n          if: useIf,\n          ...group\n        }]) => {\n          const groupItems = getItemsFromScreens(Screen, group.screens);\n          return () => {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            const children = groupItems.map(item => item());\n            const shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _jsxRuntime.jsx)(Group, {\n              navigationKey: key,\n              ...group,\n              children: children\n            }, key);\n          };\n        }));\n      }\n    }\n    const NavigatorComponent = () => {\n      const children = items.map(item => item());\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Navigator, {\n        ...rest,\n        children: children\n      });\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    let initialScreenHasPath = false;\n    let initialScreenConfig;\n    const createPathConfigForTree = (t, o, skipInitialDetection) => {\n      const createPathConfigForScreens = (screens, initialRouteName) => {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(([a], [b]) => {\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(([key, item]) => {\n          const screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          let screens;\n          const skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection) {\n                if (key === initialRouteName && screenConfig.path != null) {\n                  initialScreenHasPath = true;\n                } else if (screenConfig.path === '') {\n                  // We encounter a leaf screen with empty path,\n                  // Clear the initial screen config as it's not needed anymore\n                  initialScreenConfig = undefined;\n                }\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(([, screen]) => Object.keys(screen).length > 0));\n      };\n      const screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (const key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, o?.initialRouteName ?? t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(([, group]) => {\n            Object.assign(screens, createPathConfigForScreens(group.screens, o?.initialRouteName ?? t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    const screens = createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig && !initialScreenHasPath) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":262,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"createComponentForStaticNavigation"],[7,44,1,13],[7,47,1,13,"createComponentForStaticNavigation"],[7,81,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"createPathConfigForStaticNavigation"],[8,45,1,13],[8,48,1,13,"createPathConfigForStaticNavigation"],[8,83,1,13],[9,2,3,0],[9,6,3,0,"React"],[9,11,3,0],[9,14,3,0,"_interopRequireWildcard"],[9,37,3,0],[9,38,3,0,"require"],[9,45,3,0],[9,46,3,0,"_dependencyMap"],[9,60,3,0],[10,2,4,0],[10,6,4,0,"_reactIs"],[10,14,4,0],[10,17,4,0,"require"],[10,24,4,0],[10,25,4,0,"_dependencyMap"],[10,39,4,0],[11,2,5,0],[11,6,5,0,"_useRoute"],[11,15,5,0],[11,18,5,0,"require"],[11,25,5,0],[11,26,5,0,"_dependencyMap"],[11,40,5,0],[12,2,30,0],[12,6,30,0,"_jsxRuntime"],[12,17,30,0],[12,20,30,0,"require"],[12,27,30,0],[12,28,30,0,"_dependencyMap"],[12,42,30,0],[13,2,30,48],[13,11,30,48,"_interopRequireWildcard"],[13,35,30,48,"e"],[13,36,30,48],[13,38,30,48,"t"],[13,39,30,48],[13,68,30,48,"WeakMap"],[13,75,30,48],[13,81,30,48,"r"],[13,82,30,48],[13,89,30,48,"WeakMap"],[13,96,30,48],[13,100,30,48,"n"],[13,101,30,48],[13,108,30,48,"WeakMap"],[13,115,30,48],[13,127,30,48,"_interopRequireWildcard"],[13,150,30,48],[13,162,30,48,"_interopRequireWildcard"],[13,163,30,48,"e"],[13,164,30,48],[13,166,30,48,"t"],[13,167,30,48],[13,176,30,48,"t"],[13,177,30,48],[13,181,30,48,"e"],[13,182,30,48],[13,186,30,48,"e"],[13,187,30,48],[13,188,30,48,"__esModule"],[13,198,30,48],[13,207,30,48,"e"],[13,208,30,48],[13,214,30,48,"o"],[13,215,30,48],[13,217,30,48,"i"],[13,218,30,48],[13,220,30,48,"f"],[13,221,30,48],[13,226,30,48,"__proto__"],[13,235,30,48],[13,243,30,48,"default"],[13,250,30,48],[13,252,30,48,"e"],[13,253,30,48],[13,270,30,48,"e"],[13,271,30,48],[13,294,30,48,"e"],[13,295,30,48],[13,320,30,48,"e"],[13,321,30,48],[13,330,30,48,"f"],[13,331,30,48],[13,337,30,48,"o"],[13,338,30,48],[13,341,30,48,"t"],[13,342,30,48],[13,345,30,48,"n"],[13,346,30,48],[13,349,30,48,"r"],[13,350,30,48],[13,358,30,48,"o"],[13,359,30,48],[13,360,30,48,"has"],[13,363,30,48],[13,364,30,48,"e"],[13,365,30,48],[13,375,30,48,"o"],[13,376,30,48],[13,377,30,48,"get"],[13,380,30,48],[13,381,30,48,"e"],[13,382,30,48],[13,385,30,48,"o"],[13,386,30,48],[13,387,30,48,"set"],[13,390,30,48],[13,391,30,48,"e"],[13,392,30,48],[13,394,30,48,"f"],[13,395,30,48],[13,411,30,48,"t"],[13,412,30,48],[13,416,30,48,"e"],[13,417,30,48],[13,433,30,48,"t"],[13,434,30,48],[13,441,30,48,"hasOwnProperty"],[13,455,30,48],[13,456,30,48,"call"],[13,460,30,48],[13,461,30,48,"e"],[13,462,30,48],[13,464,30,48,"t"],[13,465,30,48],[13,472,30,48,"i"],[13,473,30,48],[13,477,30,48,"o"],[13,478,30,48],[13,481,30,48,"Object"],[13,487,30,48],[13,488,30,48,"defineProperty"],[13,502,30,48],[13,507,30,48,"Object"],[13,513,30,48],[13,514,30,48,"getOwnPropertyDescriptor"],[13,538,30,48],[13,539,30,48,"e"],[13,540,30,48],[13,542,30,48,"t"],[13,543,30,48],[13,550,30,48,"i"],[13,551,30,48],[13,552,30,48,"get"],[13,555,30,48],[13,559,30,48,"i"],[13,560,30,48],[13,561,30,48,"set"],[13,564,30,48],[13,568,30,48,"o"],[13,569,30,48],[13,570,30,48,"f"],[13,571,30,48],[13,573,30,48,"t"],[13,574,30,48],[13,576,30,48,"i"],[13,577,30,48],[13,581,30,48,"f"],[13,582,30,48],[13,583,30,48,"t"],[13,584,30,48],[13,588,30,48,"e"],[13,589,30,48],[13,590,30,48,"t"],[13,591,30,48],[13,602,30,48,"f"],[13,603,30,48],[13,608,30,48,"e"],[13,609,30,48],[13,611,30,48,"t"],[13,612,30,48],[14,2,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[19,2,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[24,2,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[29,2,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[34,2,27,0],[35,0,28,0],[36,0,29,0],[38,2,31,0],[38,8,31,6,"MemoizedScreen"],[38,22,31,20],[38,25,31,23],[38,38,31,36,"React"],[38,43,31,41],[38,44,31,42,"memo"],[38,48,31,46],[38,49,31,47],[38,50,31,48],[39,4,32,2,"component"],[40,2,33,0],[40,3,33,1],[40,8,33,6],[41,4,34,2],[41,10,34,8,"route"],[41,15,34,13],[41,18,34,16],[41,22,34,16,"useRoute"],[41,40,34,24],[41,42,34,25],[41,43,34,26],[42,4,35,2],[42,10,35,8,"children"],[42,18,35,16],[42,21,35,19],[42,34,35,32,"React"],[42,39,35,37],[42,40,35,38,"createElement"],[42,53,35,51],[42,54,35,52,"component"],[42,63,35,61],[42,65,35,63],[43,6,36,4,"route"],[44,4,37,2],[44,5,37,3],[44,6,37,4],[45,4,38,2],[45,11,38,9,"children"],[45,19,38,17],[46,2,39,0],[46,3,39,1],[46,4,39,2],[47,2,40,0,"MemoizedScreen"],[47,16,40,14],[47,17,40,15,"displayName"],[47,28,40,26],[47,31,40,29],[47,45,40,43],[48,2,41,0],[48,8,41,6,"getItemsFromScreens"],[48,27,41,25],[48,30,41,28,"getItemsFromScreens"],[48,31,41,29,"Screen"],[48,37,41,35],[48,39,41,37,"screens"],[48,46,41,44],[48,51,41,49],[49,4,42,2],[49,11,42,9,"Object"],[49,17,42,15],[49,18,42,16,"entries"],[49,25,42,23],[49,26,42,24,"screens"],[49,33,42,31],[49,34,42,32],[49,35,42,33,"map"],[49,38,42,36],[49,39,42,37],[49,40,42,38],[49,41,42,39,"name"],[49,45,42,43],[49,47,42,45,"item"],[49,51,42,49],[49,52,42,50],[49,57,42,55],[50,6,43,4],[50,10,43,8,"component"],[50,19,43,17],[51,6,44,4],[51,10,44,8,"props"],[51,15,44,13],[51,18,44,16],[51,19,44,17],[51,20,44,18],[52,6,45,4],[52,10,45,8,"useIf"],[52,15,45,13],[53,6,46,4],[53,10,46,8,"isNavigator"],[53,21,46,19],[53,24,46,22],[53,29,46,27],[54,6,47,4],[54,10,47,8],[54,18,47,16],[54,22,47,20,"item"],[54,26,47,24],[54,28,47,26],[55,8,48,6],[55,14,48,12],[56,10,49,8,"screen"],[56,16,49,14],[57,10,50,8,"if"],[57,12,50,10],[57,14,50,12,"_if"],[57,17,50,15],[58,10,51,8],[58,13,51,11,"rest"],[59,8,52,6],[59,9,52,7],[59,12,52,10,"item"],[59,16,52,14],[60,8,53,6,"useIf"],[60,13,53,11],[60,16,53,14,"_if"],[60,19,53,17],[61,8,54,6,"props"],[61,13,54,11],[61,16,54,14,"rest"],[61,20,54,18],[62,8,55,6],[62,12,55,10],[62,16,55,10,"isValidElementType"],[62,43,55,28],[62,45,55,29,"screen"],[62,51,55,35],[62,52,55,36],[62,54,55,38],[63,10,56,8,"component"],[63,19,56,17],[63,22,56,20,"screen"],[63,28,56,26],[64,8,57,6],[64,9,57,7],[64,15,57,13],[64,19,57,17],[64,27,57,25],[64,31,57,29,"screen"],[64,37,57,35],[64,39,57,37],[65,10,58,8,"isNavigator"],[65,21,58,19],[65,24,58,22],[65,28,58,26],[66,10,59,8,"component"],[66,19,59,17],[66,22,59,20,"createComponentForStaticNavigation"],[66,56,59,54],[66,57,59,55,"screen"],[66,63,59,61],[66,65,59,63],[66,68,59,66,"name"],[66,72,59,70],[66,83,59,81],[66,84,59,82],[67,8,60,6],[68,6,61,4],[68,7,61,5],[68,13,61,11],[68,17,61,15],[68,21,61,15,"isValidElementType"],[68,48,61,33],[68,50,61,34,"item"],[68,54,61,38],[68,55,61,39],[68,57,61,41],[69,8,62,6,"component"],[69,17,62,15],[69,20,62,18,"item"],[69,24,62,22],[70,6,63,4],[70,7,63,5],[70,13,63,11],[70,17,63,15],[70,25,63,23],[70,29,63,27,"item"],[70,33,63,31],[70,35,63,33],[71,8,64,6,"isNavigator"],[71,19,64,17],[71,22,64,20],[71,26,64,24],[72,8,65,6,"component"],[72,17,65,15],[72,20,65,18,"createComponentForStaticNavigation"],[72,54,65,52],[72,55,65,53,"item"],[72,59,65,57],[72,61,65,59],[72,64,65,62,"name"],[72,68,65,66],[72,79,65,77],[72,80,65,78],[73,6,66,4],[74,6,67,4],[74,10,67,8,"component"],[74,19,67,17],[74,23,67,21],[74,27,67,25],[74,29,67,27],[75,8,68,6],[75,14,68,12],[75,18,68,16,"Error"],[75,23,68,21],[75,24,68,22],[75,77,68,75,"name"],[75,81,68,79],[75,262,68,260],[75,263,68,261],[76,6,69,4],[77,6,70,4],[77,12,70,10,"element"],[77,19,70,17],[77,22,70,20,"isNavigator"],[77,33,70,31],[77,37,70,35],[77,50,70,48,"React"],[77,55,70,53],[77,56,70,54,"createElement"],[77,69,70,67],[77,70,70,68,"component"],[77,79,70,77],[77,81,70,79],[77,82,70,80],[77,83,70,81],[77,84,70,82],[77,88,70,86],[77,101,70,99],[77,105,70,99,"_jsx"],[77,120,70,103],[77,122,70,104,"MemoizedScreen"],[77,136,70,118],[77,138,70,120],[78,8,71,6,"component"],[78,17,71,15],[78,19,71,17,"component"],[79,6,72,4],[79,7,72,5],[79,8,72,6],[80,6,73,4],[80,13,73,11],[80,19,73,17],[81,8,74,6],[81,14,74,12,"shouldRender"],[81,26,74,24],[81,29,74,27,"useIf"],[81,34,74,32],[81,38,74,36],[81,42,74,40],[81,46,74,44,"useIf"],[81,51,74,49],[81,52,74,50],[81,53,74,51],[82,8,75,6],[82,12,75,10],[82,13,75,11,"shouldRender"],[82,25,75,23],[82,27,75,25],[83,10,76,8],[83,17,76,15],[83,21,76,19],[84,8,77,6],[85,8,78,6],[85,15,78,13],[85,28,78,26],[85,32,78,26,"_jsx"],[85,47,78,30],[85,49,78,31,"Screen"],[85,55,78,37],[85,57,78,39],[86,10,79,8,"name"],[86,14,79,12],[86,16,79,14,"name"],[86,20,79,18],[87,10,80,8],[87,13,80,11,"props"],[87,18,80,16],[88,10,81,8,"children"],[88,18,81,16],[88,20,81,18,"children"],[88,21,81,18],[88,26,81,24,"element"],[89,8,82,6],[89,9,82,7],[89,11,82,9,"name"],[89,15,82,13],[89,16,82,14],[90,6,83,4],[90,7,83,5],[91,4,84,2],[91,5,84,3],[91,6,84,4],[92,2,85,0],[92,3,85,1],[94,2,87,0],[95,0,88,0],[96,0,89,0],[97,0,90,0],[98,0,91,0],[99,0,92,0],[100,0,93,0],[101,2,94,7],[101,11,94,16,"createComponentForStaticNavigation"],[101,45,94,50,"createComponentForStaticNavigation"],[101,46,94,51,"tree"],[101,50,94,55],[101,52,94,57,"displayName"],[101,63,94,68],[101,65,94,70],[102,4,95,2],[102,10,95,8],[103,6,96,4,"Navigator"],[103,15,96,13],[104,6,97,4,"Group"],[104,11,97,9],[105,6,98,4,"Screen"],[105,12,98,10],[106,6,99,4,"config"],[107,4,100,2],[107,5,100,3],[107,8,100,6,"tree"],[107,12,100,10],[108,4,101,2],[108,10,101,8],[109,6,102,4,"screens"],[109,13,102,11],[110,6,103,4,"groups"],[110,12,103,10],[111,6,104,4],[111,9,104,7,"rest"],[112,4,105,2],[112,5,105,3],[112,8,105,6,"config"],[112,14,105,12],[113,4,106,2],[113,8,106,6,"screens"],[113,15,106,13],[113,19,106,17],[113,23,106,21],[113,27,106,25,"groups"],[113,33,106,31],[113,37,106,35],[113,41,106,39],[113,43,106,41],[114,6,107,4],[114,12,107,10],[114,16,107,14,"Error"],[114,21,107,19],[114,22,107,20],[114,153,107,151],[114,154,107,152],[115,4,108,2],[116,4,109,2],[116,10,109,8,"items"],[116,15,109,13],[116,18,109,16],[116,20,109,18],[118,4,111,2],[119,4,112,2],[120,4,113,2],[120,9,113,7],[120,15,113,13,"key"],[120,18,113,16],[120,22,113,20,"config"],[120,28,113,26],[120,30,113,28],[121,6,114,4],[121,10,114,8,"key"],[121,13,114,11],[121,18,114,16],[121,27,114,25],[121,31,114,29,"screens"],[121,38,114,36],[121,40,114,38],[122,8,115,6,"items"],[122,13,115,11],[122,14,115,12,"push"],[122,18,115,16],[122,19,115,17],[122,22,115,20,"getItemsFromScreens"],[122,41,115,39],[122,42,115,40,"Screen"],[122,48,115,46],[122,50,115,48,"screens"],[122,57,115,55],[122,58,115,56],[122,59,115,57],[123,6,116,4],[124,6,117,4],[124,10,117,8,"key"],[124,13,117,11],[124,18,117,16],[124,26,117,24],[124,30,117,28,"groups"],[124,36,117,34],[124,38,117,36],[125,8,118,6,"items"],[125,13,118,11],[125,14,118,12,"push"],[125,18,118,16],[125,19,118,17],[125,22,118,20,"Object"],[125,28,118,26],[125,29,118,27,"entries"],[125,36,118,34],[125,37,118,35,"groups"],[125,43,118,41],[125,44,118,42],[125,45,118,43,"map"],[125,48,118,46],[125,49,118,47],[125,50,118,48],[125,51,118,49,"key"],[125,54,118,52],[125,56,118,54],[126,10,119,8,"if"],[126,12,119,10],[126,14,119,12,"useIf"],[126,19,119,17],[127,10,120,8],[127,13,120,11,"group"],[128,8,121,6],[128,9,121,7],[128,10,121,8],[128,15,121,13],[129,10,122,8],[129,16,122,14,"groupItems"],[129,26,122,24],[129,29,122,27,"getItemsFromScreens"],[129,48,122,46],[129,49,122,47,"Screen"],[129,55,122,53],[129,57,122,55,"group"],[129,62,122,60],[129,63,122,61,"screens"],[129,70,122,68],[129,71,122,69],[130,10,123,8],[130,17,123,15],[130,23,123,21],[131,12,124,10],[132,12,125,10],[132,18,125,16,"children"],[132,26,125,24],[132,29,125,27,"groupItems"],[132,39,125,37],[132,40,125,38,"map"],[132,43,125,41],[132,44,125,42,"item"],[132,48,125,46],[132,52,125,50,"item"],[132,56,125,54],[132,57,125,55],[132,58,125,56],[132,59,125,57],[133,12,126,10],[133,18,126,16,"shouldRender"],[133,30,126,28],[133,33,126,31,"useIf"],[133,38,126,36],[133,42,126,40],[133,46,126,44],[133,50,126,48,"useIf"],[133,55,126,53],[133,56,126,54],[133,57,126,55],[134,12,127,10],[134,16,127,14],[134,17,127,15,"shouldRender"],[134,29,127,27],[134,31,127,29],[135,14,128,12],[135,21,128,19],[135,25,128,23],[136,12,129,10],[137,12,130,10],[137,19,130,17],[137,32,130,30],[137,36,130,30,"_jsx"],[137,51,130,34],[137,53,130,35,"Group"],[137,58,130,40],[137,60,130,42],[138,14,131,12,"navigationKey"],[138,27,131,25],[138,29,131,27,"key"],[138,32,131,30],[139,14,132,12],[139,17,132,15,"group"],[139,22,132,20],[140,14,133,12,"children"],[140,22,133,20],[140,24,133,22,"children"],[141,12,134,10],[141,13,134,11],[141,15,134,13,"key"],[141,18,134,16],[141,19,134,17],[142,10,135,8],[142,11,135,9],[143,8,136,6],[143,9,136,7],[143,10,136,8],[143,11,136,9],[144,6,137,4],[145,4,138,2],[146,4,139,2],[146,10,139,8,"NavigatorComponent"],[146,28,139,26],[146,31,139,29,"NavigatorComponent"],[146,32,139,29],[146,37,139,35],[147,6,140,4],[147,12,140,10,"children"],[147,20,140,18],[147,23,140,21,"items"],[147,28,140,26],[147,29,140,27,"map"],[147,32,140,30],[147,33,140,31,"item"],[147,37,140,35],[147,41,140,39,"item"],[147,45,140,43],[147,46,140,44],[147,47,140,45],[147,48,140,46],[148,6,141,4],[148,13,141,11],[148,26,141,24],[148,30,141,24,"_jsx"],[148,45,141,28],[148,47,141,29,"Navigator"],[148,56,141,38],[148,58,141,40],[149,8,142,6],[149,11,142,9,"rest"],[149,15,142,13],[150,8,143,6,"children"],[150,16,143,14],[150,18,143,16,"children"],[151,6,144,4],[151,7,144,5],[151,8,144,6],[152,4,145,2],[152,5,145,3],[153,4,146,2,"NavigatorComponent"],[153,22,146,20],[153,23,146,21,"displayName"],[153,34,146,32],[153,37,146,35,"displayName"],[153,48,146,46],[154,4,147,2],[154,11,147,9,"NavigatorComponent"],[154,29,147,27],[155,2,148,0],[156,2,149,0],[157,0,150,0],[158,0,151,0],[159,0,152,0],[160,0,153,0],[161,0,154,0],[162,0,155,0],[163,0,156,0],[164,0,157,0],[165,0,158,0],[166,0,159,0],[167,0,160,0],[168,0,161,0],[169,0,162,0],[170,0,163,0],[171,0,164,0],[172,0,165,0],[173,0,166,0],[174,0,167,0],[175,2,168,7],[175,11,168,16,"createPathConfigForStaticNavigation"],[175,46,168,51,"createPathConfigForStaticNavigation"],[175,47,168,52,"tree"],[175,51,168,56],[175,53,168,58,"options"],[175,60,168,65],[175,62,168,67,"auto"],[175,66,168,71],[175,68,168,73],[176,4,169,2],[176,8,169,6,"initialScreenHasPath"],[176,28,169,26],[176,31,169,29],[176,36,169,34],[177,4,170,2],[177,8,170,6,"initialScreenConfig"],[177,27,170,25],[178,4,171,2],[178,10,171,8,"createPathConfigForTree"],[178,33,171,31],[178,36,171,34,"createPathConfigForTree"],[178,37,171,35,"t"],[178,38,171,36],[178,40,171,38,"o"],[178,41,171,39],[178,43,171,41,"skipInitialDetection"],[178,63,171,61],[178,68,171,66],[179,6,172,4],[179,12,172,10,"createPathConfigForScreens"],[179,38,172,36],[179,41,172,39,"createPathConfigForScreens"],[179,42,172,40,"screens"],[179,49,172,47],[179,51,172,49,"initialRouteName"],[179,67,172,65],[179,72,172,70],[180,8,173,6],[180,15,173,13,"Object"],[180,21,173,19],[180,22,173,20,"fromEntries"],[180,33,173,31],[180,34,173,32,"Object"],[180,40,173,38],[180,41,173,39,"entries"],[180,48,173,46],[180,49,173,47,"screens"],[180,56,173,54],[181,8,174,6],[182,8,175,6],[183,8,175,6],[183,9,176,7,"sort"],[183,13,176,11],[183,14,176,12],[183,15,176,13],[183,16,176,14,"a"],[183,17,176,15],[183,18,176,16],[183,20,176,18],[183,21,176,19,"b"],[183,22,176,20],[183,23,176,21],[183,28,176,26],[184,10,177,8],[184,14,177,12,"a"],[184,15,177,13],[184,20,177,18,"initialRouteName"],[184,36,177,34],[184,38,177,36],[185,12,178,10],[185,19,178,17],[185,20,178,18],[185,21,178,19],[186,10,179,8],[187,10,180,8],[187,14,180,12,"b"],[187,15,180,13],[187,20,180,18,"initialRouteName"],[187,36,180,34],[187,38,180,36],[188,12,181,10],[188,19,181,17],[188,20,181,18],[189,10,182,8],[190,10,183,8],[190,17,183,15],[190,18,183,16],[191,8,184,6],[191,9,184,7],[191,10,184,8],[191,11,184,9,"map"],[191,14,184,12],[191,15,184,13],[191,16,184,14],[191,17,184,15,"key"],[191,20,184,18],[191,22,184,20,"item"],[191,26,184,24],[191,27,184,25],[191,32,184,30],[192,10,185,8],[192,16,185,14,"screenConfig"],[192,28,185,26],[192,31,185,29],[192,32,185,30],[192,33,185,31],[193,10,186,8],[193,14,186,12],[193,23,186,21],[193,27,186,25,"item"],[193,31,186,29],[193,33,186,31],[194,12,187,10],[194,16,187,14],[194,23,187,21,"item"],[194,27,187,25],[194,28,187,26,"linking"],[194,35,187,33],[194,40,187,38],[194,48,187,46],[194,50,187,48],[195,14,188,12,"screenConfig"],[195,26,188,24],[195,27,188,25,"path"],[195,31,188,29],[195,34,188,32,"item"],[195,38,188,36],[195,39,188,37,"linking"],[195,46,188,44],[196,12,189,10],[196,13,189,11],[196,19,189,17],[197,14,190,12,"Object"],[197,20,190,18],[197,21,190,19,"assign"],[197,27,190,25],[197,28,190,26,"screenConfig"],[197,40,190,38],[197,42,190,40,"item"],[197,46,190,44],[197,47,190,45,"linking"],[197,54,190,52],[197,55,190,53],[198,12,191,10],[199,12,192,10],[199,16,192,14],[199,23,192,21,"screenConfig"],[199,35,192,33],[199,36,192,34,"path"],[199,40,192,38],[199,45,192,43],[199,53,192,51],[199,55,192,53],[200,14,193,12,"screenConfig"],[200,26,193,24],[200,27,193,25,"path"],[200,31,193,29],[200,34,193,32,"screenConfig"],[200,46,193,44],[200,47,193,45,"path"],[200,51,193,49],[200,52,193,50,"replace"],[200,59,193,57],[200,60,193,58],[200,65,193,63],[200,67,193,65],[200,69,193,67],[200,70,193,68],[200,71,193,69],[201,14,193,69],[201,15,194,13,"replace"],[201,22,194,20],[201,23,194,21],[201,28,194,26],[201,30,194,28],[201,32,194,30],[201,33,194,31],[201,34,194,32],[201,35,194,33],[202,12,195,10],[203,10,196,8],[204,10,197,8],[204,14,197,12,"screens"],[204,21,197,19],[205,10,198,8],[205,16,198,14,"skipInitialDetectionInChild"],[205,43,198,41],[205,46,198,44,"skipInitialDetection"],[205,66,198,64],[205,70,198,68,"screenConfig"],[205,82,198,80],[205,83,198,81,"path"],[205,87,198,85],[205,91,198,89],[205,95,198,93],[205,99,198,97,"screenConfig"],[205,111,198,109],[205,112,198,110,"path"],[205,116,198,114],[205,121,198,119],[205,123,198,121],[206,10,199,8],[206,14,199,12],[206,22,199,20],[206,26,199,24,"item"],[206,30,199,28],[206,32,199,30],[207,12,200,10,"screens"],[207,19,200,17],[207,22,200,20,"createPathConfigForTree"],[207,45,200,43],[207,46,200,44,"item"],[207,50,200,48],[207,52,200,50,"undefined"],[207,61,200,59],[207,63,200,61,"skipInitialDetectionInChild"],[207,90,200,88],[207,91,200,89],[208,10,201,8],[208,11,201,9],[208,17,201,15],[208,21,201,19],[208,29,201,27],[208,33,201,31,"item"],[208,37,201,35],[208,41,201,39],[208,49,201,47],[208,53,201,51,"item"],[208,57,201,55],[208,58,201,56,"screen"],[208,64,201,62],[208,69,201,67,"item"],[208,73,201,71],[208,74,201,72,"screen"],[208,80,201,78],[208,81,201,79,"config"],[208,87,201,85],[208,88,201,86,"screens"],[208,95,201,93],[208,99,201,97,"item"],[208,103,201,101],[208,104,201,102,"screen"],[208,110,201,108],[208,111,201,109,"config"],[208,117,201,115],[208,118,201,116,"groups"],[208,124,201,122],[208,125,201,123],[208,127,201,125],[209,12,202,10,"screens"],[209,19,202,17],[209,22,202,20,"createPathConfigForTree"],[209,45,202,43],[209,46,202,44,"item"],[209,50,202,48],[209,51,202,49,"screen"],[209,57,202,55],[209,59,202,57,"undefined"],[209,68,202,66],[209,70,202,68,"skipInitialDetectionInChild"],[209,97,202,95],[209,98,202,96],[210,10,203,8],[211,10,204,8],[211,14,204,12,"screens"],[211,21,204,19],[211,23,204,21],[212,12,205,10,"screenConfig"],[212,24,205,22],[212,25,205,23,"screens"],[212,32,205,30],[212,35,205,33,"screens"],[212,42,205,40],[213,10,206,8],[214,10,207,8],[214,14,207,12,"auto"],[214,18,207,16],[214,22,207,20],[214,23,207,21,"screenConfig"],[214,35,207,33],[214,36,207,34,"screens"],[214,43,207,41],[215,10,208,8],[216,10,209,8],[216,12,209,10],[216,21,209,19],[216,25,209,23,"item"],[216,29,209,27],[216,33,209,31,"item"],[216,37,209,35],[216,38,209,36,"linking"],[216,45,209,43],[216,49,209,47],[216,53,209,51],[216,54,209,52],[216,56,209,54],[217,12,210,10],[217,16,210,14,"screenConfig"],[217,28,210,26],[217,29,210,27,"path"],[217,33,210,31],[217,37,210,35],[217,41,210,39],[217,43,210,41],[218,14,211,12],[218,18,211,16],[218,19,211,17,"skipInitialDetection"],[218,39,211,37],[218,41,211,39],[219,16,212,14],[219,20,212,18,"key"],[219,23,212,21],[219,28,212,26,"initialRouteName"],[219,44,212,42],[219,48,212,46,"screenConfig"],[219,60,212,58],[219,61,212,59,"path"],[219,65,212,63],[219,69,212,67],[219,73,212,71],[219,75,212,73],[220,18,213,16,"initialScreenHasPath"],[220,38,213,36],[220,41,213,39],[220,45,213,43],[221,16,214,14],[221,17,214,15],[221,23,214,21],[221,27,214,25,"screenConfig"],[221,39,214,37],[221,40,214,38,"path"],[221,44,214,42],[221,49,214,47],[221,51,214,49],[221,53,214,51],[222,18,215,16],[223,18,216,16],[224,18,217,16,"initialScreenConfig"],[224,37,217,35],[224,40,217,38,"undefined"],[224,49,217,47],[225,16,218,14],[226,14,219,12],[227,12,220,10],[227,13,220,11],[227,19,220,17],[228,14,221,12],[228,18,221,16],[228,19,221,17,"skipInitialDetection"],[228,39,221,37],[228,43,221,41,"initialScreenConfig"],[228,62,221,60],[228,66,221,64],[228,70,221,68],[228,72,221,70],[229,16,222,14,"initialScreenConfig"],[229,35,222,33],[229,38,222,36,"screenConfig"],[229,50,222,48],[230,14,223,12],[231,14,224,12,"screenConfig"],[231,26,224,24],[231,27,224,25,"path"],[231,31,224,29],[231,34,224,32,"key"],[231,37,224,35],[231,38,224,36,"replace"],[231,45,224,43],[231,46,224,44],[231,57,224,55],[231,59,224,57],[231,64,224,62],[231,65,224,63],[231,66,224,64,"replace"],[231,73,224,71],[231,74,224,72],[231,78,224,76],[231,80,224,78],[231,82,224,80],[231,83,224,81],[231,84,224,82,"toLowerCase"],[231,95,224,93],[231,96,224,94],[231,97,224,95],[232,12,225,10],[233,10,226,8],[234,10,227,8],[234,17,227,15],[234,18,227,16,"key"],[234,21,227,19],[234,23,227,21,"screenConfig"],[234,35,227,33],[234,36,227,34],[235,8,228,6],[235,9,228,7],[235,10,228,8],[235,11,228,9,"filter"],[235,17,228,15],[235,18,228,16],[235,19,228,17],[235,22,228,20,"screen"],[235,28,228,26],[235,29,228,27],[235,34,228,32,"Object"],[235,40,228,38],[235,41,228,39,"keys"],[235,45,228,43],[235,46,228,44,"screen"],[235,52,228,50],[235,53,228,51],[235,54,228,52,"length"],[235,60,228,58],[235,63,228,61],[235,64,228,62],[235,65,228,63],[235,66,228,64],[236,6,229,4],[236,7,229,5],[237,6,230,4],[237,12,230,10,"screens"],[237,19,230,17],[237,22,230,20],[237,23,230,21],[237,24,230,22],[239,6,232,4],[240,6,233,4],[241,6,234,4],[241,11,234,9],[241,17,234,15,"key"],[241,20,234,18],[241,24,234,22,"t"],[241,25,234,23],[241,26,234,24,"config"],[241,32,234,30],[241,34,234,32],[242,8,235,6],[242,12,235,10,"key"],[242,15,235,13],[242,20,235,18],[242,29,235,27],[242,33,235,31,"t"],[242,34,235,32],[242,35,235,33,"config"],[242,41,235,39],[242,42,235,40,"screens"],[242,49,235,47],[242,51,235,49],[243,10,236,8,"Object"],[243,16,236,14],[243,17,236,15,"assign"],[243,23,236,21],[243,24,236,22,"screens"],[243,31,236,29],[243,33,236,31,"createPathConfigForScreens"],[243,59,236,57],[243,60,236,58,"t"],[243,61,236,59],[243,62,236,60,"config"],[243,68,236,66],[243,69,236,67,"screens"],[243,76,236,74],[243,78,236,76,"o"],[243,79,236,77],[243,81,236,79,"initialRouteName"],[243,97,236,95],[243,101,236,99,"t"],[243,102,236,100],[243,103,236,101,"config"],[243,109,236,107],[243,110,236,108,"initialRouteName"],[243,126,236,124],[243,127,236,125],[243,128,236,126],[244,8,237,6],[245,8,238,6],[245,12,238,10,"key"],[245,15,238,13],[245,20,238,18],[245,28,238,26],[245,32,238,30,"t"],[245,33,238,31],[245,34,238,32,"config"],[245,40,238,38],[245,41,238,39,"groups"],[245,47,238,45],[245,49,238,47],[246,10,239,8,"Object"],[246,16,239,14],[246,17,239,15,"entries"],[246,24,239,22],[246,25,239,23,"t"],[246,26,239,24],[246,27,239,25,"config"],[246,33,239,31],[246,34,239,32,"groups"],[246,40,239,38],[246,41,239,39],[246,42,239,40,"forEach"],[246,49,239,47],[246,50,239,48],[246,51,239,49],[246,54,239,52,"group"],[246,59,239,57],[246,60,239,58],[246,65,239,63],[247,12,240,10,"Object"],[247,18,240,16],[247,19,240,17,"assign"],[247,25,240,23],[247,26,240,24,"screens"],[247,33,240,31],[247,35,240,33,"createPathConfigForScreens"],[247,61,240,59],[247,62,240,60,"group"],[247,67,240,65],[247,68,240,66,"screens"],[247,75,240,73],[247,77,240,75,"o"],[247,78,240,76],[247,80,240,78,"initialRouteName"],[247,96,240,94],[247,100,240,98,"t"],[247,101,240,99],[247,102,240,100,"config"],[247,108,240,106],[247,109,240,107,"initialRouteName"],[247,125,240,123],[247,126,240,124],[247,127,240,125],[248,10,241,8],[248,11,241,9],[248,12,241,10],[249,8,242,6],[250,6,243,4],[251,6,244,4],[251,10,244,8,"Object"],[251,16,244,14],[251,17,244,15,"keys"],[251,21,244,19],[251,22,244,20,"screens"],[251,29,244,27],[251,30,244,28],[251,31,244,29,"length"],[251,37,244,35],[251,42,244,40],[251,43,244,41],[251,45,244,43],[252,8,245,6],[252,15,245,13,"undefined"],[252,24,245,22],[253,6,246,4],[254,6,247,4],[254,13,247,11,"screens"],[254,20,247,18],[255,4,248,2],[255,5,248,3],[256,4,249,2],[256,10,249,8,"screens"],[256,17,249,15],[256,20,249,18,"createPathConfigForTree"],[256,43,249,41],[256,44,249,42,"tree"],[256,48,249,46],[256,50,249,48,"options"],[256,57,249,55],[256,59,249,57],[256,64,249,62],[256,65,249,63],[257,4,250,2],[257,8,250,6,"auto"],[257,12,250,10],[257,16,250,14,"initialScreenConfig"],[257,35,250,33],[257,39,250,37],[257,40,250,38,"initialScreenHasPath"],[257,60,250,58],[257,62,250,60],[258,6,251,4,"initialScreenConfig"],[258,25,251,23],[258,26,251,24,"path"],[258,30,251,28],[258,33,251,31],[258,35,251,33],[259,4,252,2],[260,4,253,2],[260,11,253,9,"screens"],[260,18,253,16],[261,2,254,0],[262,0,254,1],[262,3]],"functionMap":{"names":["<global>","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","_jsx$argument_1.children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;+CC8B;CDQ;4BEE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CFC;OMS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CNG;OUoB;kCCG;uCCC;YCI;ODQ,ME;OF4C,SG,8CH;KDC;gDKU;SLE;GDO;CVM"}},"type":"js/module"}]}